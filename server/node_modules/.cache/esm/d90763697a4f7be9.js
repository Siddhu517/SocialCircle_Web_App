let mongoose;_7a4‍.x([["default",()=>_7a4‍.o]]);_7a4‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);
const { Schema } = mongoose;

const userSchema = new Schema(
  {
    _id: mongoose.Schema.Types.ObjectId,
    name: {
      type: String,
      trim: true,
    },
    username: {
      type: String,
      trim: true,
      required: true,
      unique: true,
    },
    email: {
      type: String,
      trim: true,
      required: true,
      unique: true,
    },
    password: {
      type: String,
      min: 6,
      max: 64,
    },
    image: {
      url: String,
      public_id: String,
    },
    back_image: {
      url: String,
      public_id: String,
    },
    back_images: {
      url: String,
      public_id: String,
    },
    images: {
      url: String,
      public_id: String,
    },
    contact: {
      type: Number,
    },
    gender: {
      type: String,
    },
    dateofbirth: {
      type: String,
    },
    address: {
      city: {
        type: String,
      },
      state: {
        type: String,
      },
      country: {
        type: String,
      },
      pincode: {
        type: String,
      },
    },
    work: {
      type: String,
    },
    education: {
      type: String,
    },
    relationship: {
      type: String,
    },
    posts: [],
    role: {
      type: String,
      default: "Subscriber",
    },
    following: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
    followers: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  },
  {
    timestamps: true,
  }
);

_7a4‍.d(mongoose.model("User", userSchema));
